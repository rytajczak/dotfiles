(defvar show-media-controls false)

(deflisten media :initial ""
  "bash ./scripts/media_query.sh")

(deflisten kb-layout :initial ""
  "niri msg event-stream | stdbuf -oL grep --line-buffered 'Keyboard layout switched'")

;; Top bar
(defwidget bar []
  (centerbox
    (box :halign "start"
         :space-evenly false
         :spacing 12
         :style "padding-left: 1rem"
      (music))
    (box :space-evenly false)
    (box :halign "end"
         :space-evenly false
         :style "padding-right: 1rem;"
         :spacing 12
      (systray :icon-size 15
               :prepend-new true)
      (screenrecorder)
      ; (language)
      (clock))))

;; Music module
(defwidget music []
  (box :space-evenly false
    (stack :selected {media.artUrl == "" ? 0 : 1}
           :style "margin-right: 1rem"
      (label :text "󰎇" :class "icon")
      (image :path {replace(media.artUrl, "^file:\/\/", "")}
             :image-height 15))
    (revealer :reveal {media.title == "" ? false : true}
              :transition "slideright"
      (eventbox :onhover "${EWW_CMD} update show-media-controls=true"
                :onhoverlost "${EWW_CMD} update show-media-controls=false"
        (box :space-evenly false
             :valign "center"
          (revealer :reveal {show-media-controls || media.status == "Paused"}
                    :transition "slideleft"
            (box :space-evenly false
                 :style "margin-right: 1rem"
              (eventbox :onclick "playerctl previous"
                        :cursor "pointer"
                        :class "media-button"
                (label :text "󰒮"
                       :style "font-size: 1.3rem"))
              (eventbox :onclick "playerctl play-pause"
                      :cursor "pointer"
                      :class "media-button"
                (label :text {media.status == "Playing" ? "󰏤" : "󰐊"}
                       :style "font-size: 1.3rem; margin: 0 6px;"))
              (eventbox :onclick "playerctl next"
                      :cursor "pointer"
                      :class "media-button"
                (label :text "󰒭"
                       :style "font-size: 1.3rem"))))
          (label :text "${media.artist == '' ? '' : media.artist + ' — '}${media.title}"
                 :style {media.status == "Playing" ? "" : "color: #b7b7b7"}))))))

;; Screenrecorder module
(defwidget screenrecorder []
  (box :space-evenly false
    (label :text "   Recording...")
    (label :text "0:12"
           :style "color: #b7b7b7")))

;; keyboard module
(defwidget language []
  (box
    (label :text {kb-layout})))

;; clock module
(defwidget clock []
  (box :space-evenly false
       :spacing 9
    (label :text "" :class "icon")
    (label :text "${formattime(EWW_TIME, '%I:%M %p')}"
           :halign "start"
           :class "clock")))

;; Large desktop clock
(defwidget big-clock []
  (box :orientation "v"
       :valign "center"
       :space-evenly false
    (label :text "${formattime(EWW_TIME, '%I:%M')}"
           :class "clock-time")
    (label :text "${formattime(EWW_TIME, '%A %d %B')}"
           :class "clock-date")))


(defwindow bar
  :monitor 0
  :stacking "fg"
  :geometry (geometry :width "100%"
                      :height "30px"
                      :anchor "top center")
  :exclusive true
  (bar))


(defwindow bg-clock
  :monitor 0
  :stacking "bg"
  :geometry (geometry :width "30%"
                      :height "30%"
                      :anchor "center")
  (big-clock))
